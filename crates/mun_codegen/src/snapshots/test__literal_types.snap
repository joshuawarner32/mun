---
source: crates/mun_codegen/src/test.rs
expression: "pub fn main(){\n    let a = 123;\n    let a = 123u8;\n    let a = 123u16;\n    let a = 123u32;\n    let a = 123u64;\n    let a = 123u128;\n    let a = 1_000_000_u32;\n    let a = 123i8;\n    let a = 123i16;\n    let a = 123i32;\n    let a = 123i64;\n    let a = 123123123123123123123123123123123i128;\n    let a = 1_000_000_i32;\n    let a = 1_000_123.0e-2;\n    let a = 1_000_123.0e-2f32;\n    let a = 1_000_123.0e-2f64;\n}\n\npub fn add(a:u32) -> u32 {\n    a + 12u32\n}"
---
; == FILE IR =====================================
; ModuleID = 'main.mun'
source_filename = "main.mun"

%struct.MunTypeInfo.1 = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@global_type_table = external global [1 x %struct.MunTypeInfo.1 addrspace(4)*]

define void @main() {
body:
  %a15 = alloca double
  %a14 = alloca float
  %a13 = alloca double
  %a12 = alloca i32
  %a11 = alloca i128
  %a10 = alloca i64
  %a9 = alloca i32
  %a8 = alloca i16
  %a7 = alloca i8
  %a6 = alloca i32
  %a5 = alloca i128
  %a4 = alloca i64
  %a3 = alloca i32
  %a2 = alloca i16
  %a1 = alloca i8
  %a = alloca i32
  store i32 123, i32* %a
  store i8 123, i8* %a1
  store i16 123, i16* %a2
  store i32 123, i32* %a3
  store i64 123, i64* %a4
  store i128 123, i128* %a5
  store i32 1000000, i32* %a6
  store i8 123, i8* %a7
  store i16 123, i16* %a8
  store i32 123, i32* %a9
  store i64 123, i64* %a10
  store i128 123123123123123123123123123123123, i128* %a11
  store i32 1000000, i32* %a12
  store double 0x40C3889D70A3D70A, double* %a13
  store float 0x40C3889D80000000, float* %a14
  store double 0x40C3889D70A3D70A, double* %a15
  ret void
}

define i32 @add(i32 %0) {
body:
  %a = alloca i32
  store i32 %0, i32* %a
  %a1 = load i32, i32* %a
  %add = add i32 %a1, 12
  ret i32 %add
}


; == GROUP IR ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@"type_info::<core::u32>::name" = private unnamed_addr constant [10 x i8] c"core::u32\00"
@"type_info::<core::u32>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"daz5d\A6\BE\88\81=&Y\A1+\C6\1D", [10 x i8]* @"type_info::<core::u32>::name", i32 32, i8 4, i8 0 }
@global_type_table = global [1 x %struct.MunTypeInfo addrspace(4)*] [%struct.MunTypeInfo addrspace(4)* @"type_info::<core::u32>"]

