---
source: crates/mun_codegen/src/test.rs
expression: "pub fn fibonacci(n:i32) -> i32 {\n    if n <= 1 {\n        n\n    } else {\n        fibonacci(n-1) + fibonacci(n-2)\n    }\n}"
---
; == FILE IR =====================================
; ModuleID = 'main.mun'
source_filename = "main.mun"

%DispatchTable.0 = type { i32 (i32)* }
%struct.MunTypeInfo.1 = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@dispatchTable = external global %DispatchTable.0
@global_type_table = external global [1 x %struct.MunTypeInfo.1 addrspace(4)*]

define i32 @fibonacci(i32 %0) {
body:
  %lesseq = icmp sle i32 %0, 1
  br i1 %lesseq, label %if_merge, label %else

else:                                             ; preds = %body
  %sub = sub i32 %0, 1
  %fibonacci_ptr = load i32 (i32)*, i32 (i32)** getelementptr inbounds (%DispatchTable.0, %DispatchTable.0* @dispatchTable, i32 0, i32 0)
  %fibonacci = call i32 %fibonacci_ptr(i32 %sub)
  %sub5 = sub i32 %0, 2
  %fibonacci_ptr6 = load i32 (i32)*, i32 (i32)** getelementptr inbounds (%DispatchTable.0, %DispatchTable.0* @dispatchTable, i32 0, i32 0)
  %fibonacci7 = call i32 %fibonacci_ptr6(i32 %sub5)
  %add = add i32 %fibonacci, %fibonacci7
  br label %if_merge

if_merge:                                         ; preds = %body, %else
  %iftmp = phi i32 [ %add, %else ], [ %0, %body ]
  ret i32 %iftmp
}


; == GROUP IR ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%DispatchTable = type { i32 (i32)* }
%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@dispatchTable = global %DispatchTable { i32 (i32)* @fibonacci }
@"type_info::<core::i32>::name" = private unnamed_addr constant [10 x i8] c"core::i32\00"
@"type_info::<core::i32>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"\17yzt\19\D62\17\D25\95C\17\88[\FA", [10 x i8]* @"type_info::<core::i32>::name", i32 32, i8 4, i8 0 }
@global_type_table = global [1 x %struct.MunTypeInfo addrspace(4)*] [%struct.MunTypeInfo addrspace(4)* @"type_info::<core::i32>"]

declare i32 @fibonacci(i32)

