---
source: crates/mun_codegen/src/test.rs
expression: "// resources/script.mun\nextern fn thing(n: i32);\nextern fn print(n: i32) -> i32;\n\npub fn main() {\n    // 1st\n    print(1);\n    thing(5);\n\n    // 2nd\n    print(2);\n    thing(78);\n}"
---
; == FILE IR =====================================
; ModuleID = 'main.mun'
source_filename = "main.mun"

%DispatchTable.0 = type { i32 (i32)*, void (i32)* }
%struct.MunTypeInfo.1 = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@dispatchTable = external global %DispatchTable.0
@global_type_table = external global [1 x %struct.MunTypeInfo.1 addrspace(4)*]

define void @main() {
body:
  %print_ptr = load i32 (i32)*, i32 (i32)** getelementptr inbounds (%DispatchTable.0, %DispatchTable.0* @dispatchTable, i32 0, i32 0)
  %print = call i32 %print_ptr(i32 1)
  %thing_ptr = load void (i32)*, void (i32)** getelementptr inbounds (%DispatchTable.0, %DispatchTable.0* @dispatchTable, i32 0, i32 1)
  call void %thing_ptr(i32 5)
  %print_ptr1 = load i32 (i32)*, i32 (i32)** getelementptr inbounds (%DispatchTable.0, %DispatchTable.0* @dispatchTable, i32 0, i32 0)
  %print2 = call i32 %print_ptr1(i32 2)
  %thing_ptr3 = load void (i32)*, void (i32)** getelementptr inbounds (%DispatchTable.0, %DispatchTable.0* @dispatchTable, i32 0, i32 1)
  call void %thing_ptr3(i32 78)
  ret void
}


; == GROUP IR ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%DispatchTable = type { i32 (i32)*, void (i32)* }
%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@dispatchTable = global %DispatchTable zeroinitializer
@"type_info::<core::i32>::name" = private unnamed_addr constant [10 x i8] c"core::i32\00"
@"type_info::<core::i32>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"\17yzt\19\D62\17\D25\95C\17\88[\FA", [10 x i8]* @"type_info::<core::i32>::name", i32 32, i8 4, i8 0 }
@global_type_table = global [1 x %struct.MunTypeInfo addrspace(4)*] [%struct.MunTypeInfo addrspace(4)* @"type_info::<core::i32>"]

