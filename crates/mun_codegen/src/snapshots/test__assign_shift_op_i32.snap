---
source: crates/mun_codegen/src/test.rs
expression: "pub fn assign_leftshift(a: i32, b: i32) -> i32 {\n    a <<= b;\n    a\n}\npub fn assign_rightshift(a: i32, b: i32) -> i32 {\n    a >>= b;\n    a\n}"
---
; == FILE IR =====================================
; ModuleID = 'main.mun'
source_filename = "main.mun"

%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@global_type_table = external global [1 x %struct.MunTypeInfo addrspace(4)*]

define i32 @assign_leftshift(i32 %0, i32 %1) {
body:
  %left_shift = shl i32 %0, %1
  ret i32 %left_shift
}

define i32 @assign_rightshift(i32 %0, i32 %1) {
body:
  %right_shift = ashr i32 %0, %1
  ret i32 %right_shift
}


; == GROUP IR ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@"type_info::<core::i32>::name" = private unnamed_addr constant [10 x i8] c"core::i32\00"
@"type_info::<core::i32>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"\17yzt\19\D62\17\D25\95C\17\88[\FA", [10 x i8]* @"type_info::<core::i32>::name", i32 32, i8 4, i8 0 }
@global_type_table = global [1 x %struct.MunTypeInfo addrspace(4)*] [%struct.MunTypeInfo addrspace(4)* @"type_info::<core::i32>"]

