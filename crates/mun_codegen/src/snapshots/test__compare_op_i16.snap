---
source: crates/mun_codegen/src/test.rs
expression: "pub fn equals(a: i16, b: i16) -> bool { a == b }\npub fn not_equal(a: i16, b: i16) -> bool { a != b}\npub fn less(a: i16, b: i16) -> bool { a < b }\npub fn less_equal(a: i16, b: i16) -> bool { a <= b }\npub fn greater(a: i16, b: i16) -> bool { a > b }\npub fn greater_equal(a: i16, b: i16) -> bool { a >= b }"
---
; == FILE IR =====================================
; ModuleID = 'main.mun'
source_filename = "main.mun"

%struct.MunTypeInfo.1 = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@global_type_table = external global [2 x %struct.MunTypeInfo.1 addrspace(4)*]

define i1 @equals(i16 %0, i16 %1) {
body:
  %eq = icmp eq i16 %0, %1
  ret i1 %eq
}

define i1 @not_equal(i16 %0, i16 %1) {
body:
  %neq = icmp ne i16 %0, %1
  ret i1 %neq
}

define i1 @less(i16 %0, i16 %1) {
body:
  %less = icmp slt i16 %0, %1
  ret i1 %less
}

define i1 @less_equal(i16 %0, i16 %1) {
body:
  %lesseq = icmp sle i16 %0, %1
  ret i1 %lesseq
}

define i1 @greater(i16 %0, i16 %1) {
body:
  %greater = icmp sgt i16 %0, %1
  ret i1 %greater
}

define i1 @greater_equal(i16 %0, i16 %1) {
body:
  %greatereq = icmp sge i16 %0, %1
  ret i1 %greatereq
}


; == GROUP IR ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@"type_info::<core::i16>::name" = private unnamed_addr constant [10 x i8] c"core::i16\00"
@"type_info::<core::i16>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"\05\CD|\F8Bv\D8\B1\E8\8B\8C\D8\8D\B5\89\B0", [10 x i8]* @"type_info::<core::i16>::name", i32 16, i8 2, i8 0 }
@"type_info::<core::bool>::name" = private unnamed_addr constant [11 x i8] c"core::bool\00"
@"type_info::<core::bool>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"x\82\81m t7\03\CB\F8k\81-;\C9\84", [11 x i8]* @"type_info::<core::bool>::name", i32 1, i8 1, i8 0 }
@global_type_table = global [2 x %struct.MunTypeInfo addrspace(4)*] [%struct.MunTypeInfo addrspace(4)* @"type_info::<core::i16>", %struct.MunTypeInfo addrspace(4)* @"type_info::<core::bool>"]

