---
source: crates/mun_codegen/src/test.rs
expression: "pub fn leftshift(a: i16, b: i16) -> i16 { a << b }\npub fn rightshift(a: i16, b: i16) -> i16 { a >> b }"
---
; == FILE IR =====================================
; ModuleID = 'main.mun'
source_filename = "main.mun"

%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@global_type_table = external global [1 x %struct.MunTypeInfo addrspace(4)*]

define i16 @leftshift(i16 %0, i16 %1) {
body:
  %left_shift = shl i16 %0, %1
  ret i16 %left_shift
}

define i16 @rightshift(i16 %0, i16 %1) {
body:
  %right_shift = ashr i16 %0, %1
  ret i16 %right_shift
}


; == GROUP IR ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%struct.MunTypeInfo = type { [16 x i8], i8 addrspace(4)*, i32, i8, i8 }

@"type_info::<core::i16>::name" = private unnamed_addr constant [10 x i8] c"core::i16\00"
@"type_info::<core::i16>" = private unnamed_addr constant %struct.MunTypeInfo { [16 x i8] c"\05\CD|\F8Bv\D8\B1\E8\8B\8C\D8\8D\B5\89\B0", [10 x i8]* @"type_info::<core::i16>::name", i32 16, i8 2, i8 0 }
@global_type_table = global [1 x %struct.MunTypeInfo addrspace(4)*] [%struct.MunTypeInfo addrspace(4)* @"type_info::<core::i16>"]

